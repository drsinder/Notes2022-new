@*--------------------------------------------------------------------------
    **
    **  Copyright © 2022, Dale Sinder
    **
    **  Name: EditNoteFile.razor
    **
    **  Description:
    **      Note File Edit Dialog
    **
    **  This program is free software: you can redistribute it and/or modify
    **  it under the terms of the GNU General Public License version 3 as
    **  published by the Free Software Foundation.
    **
    **  This program is distributed in the hope that it will be useful,
    **  but WITHOUT ANY WARRANTY; without even the implied warranty of
    **  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    **  GNU General Public License version 3 for more details.
    **
    **  You should have received a copy of the GNU General Public License
    **  version 3 along with this program in file "license-gpl-3.0.txt".
    **  If not, see <http://www.gnu.org/licenses/gpl-3.0.txt>.
    **
    **--------------------------------------------------------------------------*@

@using Notes2022.Shared
@using Microsoft.AspNetCore.Components.Authorization
@inject IModalService Modal
@inject HttpClient Http


@if (dummyFile == null)
{
    <p class="center"><em>Loading...</em></p>
}
else
{
            <div class="dialogs">
                <h3>Edit Note File:</h3>

                <EditForm id="createform" Model="@dummyFile" OnValidSubmit="HandleValidSubmit">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <strong>Enter a NoteFile Name:</strong>
                    <InputText id="name" @bind-Value="dummyFile.NoteFileName" class="form-control short-input keep-center" />
                    <strong>Enter a NoteFile Title:</strong>
                    <InputText id="title" @bind-Value="dummyFile.NoteFileTitle" class="form-control short-input keep-center" />
                    <button type="submit">Submit</button> <button type="button" @onclick="Cancel">Cancel</button>
                </EditForm>
            </div>

}
@code {

    public CreateFileModel dummyFile = new CreateFileModel();

    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }
    [Parameter] public int FileId { get; set; }
    [Parameter] public string FileName { get; set; }
    [Parameter] public string FileTitle { get; set; }
    [Parameter] public DateTime LastEdited { get; set; }
    [Parameter] public int NumberArchives { get; set; }
    [Parameter] public string Owner { get; set; }

    protected override void OnInitialized()
    {
        dummyFile.NoteFileName = FileName;
        dummyFile.NoteFileTitle = FileTitle;
    }

    private async Task HandleValidSubmit()
    {
        NoteFile nf = new NoteFile
        {
            Id = FileId,
            NumberArchives = NumberArchives,
            OwnerId = Owner,
            NoteFileName = dummyFile.NoteFileName,
            NoteFileTitle = dummyFile.NoteFileTitle,
            LastEdited = LastEdited
        };

        await DAL.UpdateNoteFile(Http, nf);

        await ModalInstance.CloseAsync();
    }

    private void Cancel()
    {
        ModalInstance.CancelAsync();
    }
}